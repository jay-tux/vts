# !/bin/bash

compile='false'
debug='false'
verbose='false'
flags=''

while getopts 'cdf:vh' opt; do
	case $opt in
		'c')
			compile='true'
			;;
		'd')
			debug='true'
			;;
		'v')
			verbose='true'
			;;
		'f')
			flags="$flags -define:$OPTARG"
			;;
		'h')
			echo "Not implemented yet..."
			;;
		*)
			echo "Unknown option $opt"
			;;
	esac
done

if [[ $compile == 'true' ]]; then
	if [[ $verbose == 'true' ]]; then
		echo 'Verbose enabled: compiling verbose logging version to bin/vts-verbose.exe'
		mcs -define:VERBOSE -define:EXECUTION -define:MODULE -define:PARSING -define:WARNING -define:STRUCTURAL \
			-r:System.Data -r:System.Drawing -r:System.Windows.Forms -out:bin/vts-verbose.exe -main:Jay.VTS.Program *.cs */*.cs
	fi
	if [[ $debug == 'true' ]]; then
		echo 'Debug enabled: compiling debug version to bin/vts-debug.exe'
		mcs -define:VERBOSE -define:EXECUTION -define:MODULE -define:PARSING -define:WARNING -define:STRUCTURAL -define:DEBUG -define:MESSAGE \
			-r:System.Data -r:System.Drawing -r:System.Windows.Forms -out:bin/vts-verbose.exe -main:Jay.VTS.Program *.cs */*.cs
	fi
	if [[ $flags != '' ]]; then
		echo "Flags not empty; compiling with $flags to bin/vts-flagged.exe"
		mcs $flags -r:System.Data -r:System.Drawing -r:System.Windows.Forms -out:bin/vts-flagged.exe -main:Jay.VTS.Program -debug *.cs */*.cs
	fi
	echo 'Compile enabled: compiling release version to bin/vts-parse.exe'
	mcs -r:System.Data -r:System.Drawing -r:System.Windows.Forms -out:bin/vts-parse.exe -main:Jay.VTS.Program *.cs */*.cs
	if [[ $? != 0 ]]; then
		>&2 echo "Failed to compile." 
		exit -1
	fi
fi
